experiment_num: 9

Parameters:
random_state=9
population=30
search_space_dimensions=(12, 6, 3)
learning_rate=0.01
alpha=0.7
epochs=450
patience=10
early_stopping_threshold=0.0001
num_init_connections=(7, 3)
connections_limits=((2, 10000), (2, 100000))


Configurations:
iterations: 30, w=0.9, c_1=2, c_2=2, epsilon=0.4
iterations: 30, w=0.9, c_1=4, c_2=4, epsilon=0.4
iterations: 20, w=0.9, c_1=1, c_2=10, epsilon=0.4


best particle:
train accuracy: 0.8916666666666667
test accuracy: 1.0
test recall: 1.0
test precision: 1.0
test f1 score: 1.0

number of connections: (5, 4)

connected features:
sl: [6.4 7.9]
sw: [3.  4.4]
pl: [1.6  4.35]
pl: [4.35 5.1 ]
pw: [0.1 1.3]

first connectivity matrix:
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]]

second connectivity matrix:
[[0 1 0]
 [0 1 0]
 [0 0 0]
 [0 0 1]
 [1 0 0]
 [0 0 0]]

first layer weights:
tensor(indices=tensor([[ 0,  0,  0,  3,  3],
                       [ 5,  7,  8,  3, 10]]),
       values=tensor([-2.9995,  2.8501,  5.5597, -2.7076,  4.7864]),
       size=(6, 12), nnz=5, layout=torch.sparse_coo)
first layer biases:
Parameter containing:
tensor([-0.3572,  1.6794,  0.2860, -2.2362, -0.1438, -0.1332],
       requires_grad=True)
second layer weights:
tensor(indices=tensor([[0, 1, 1, 2],
                       [4, 0, 1, 3]]),
       values=tensor([-0.0077,  4.4873, -1.2849, -4.2764]),
       size=(3, 6), nnz=4, layout=torch.sparse_coo)
second layer biases:
Parameter containing:
tensor([-0.2634, -1.2314,  1.4556], requires_grad=True)

Runtime: 832.97 seconds