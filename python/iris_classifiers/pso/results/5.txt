experiment_num: 5

Parameters:
random_state=5
population=30
search_space_dimensions=(12, 6, 3)
learning_rate=0.01
alpha=0.7
epochs=450
patience=10
early_stopping_threshold=0.0001
num_init_connections=(7, 3)
connections_limits=((2, 10000), (2, 100000))


Configurations:
iterations: 30, w=0.9, c_1=2, c_2=2, epsilon=0.4
iterations: 30, w=0.9, c_1=4, c_2=4, epsilon=0.4
iterations: 20, w=0.9, c_1=1, c_2=10, epsilon=0.4


best particle:
train accuracy: 0.9
test accuracy: 0.9666666666666667
test recall: 0.9696969696969697
test precision: 0.9722222222222222
test f1 score: 0.9696342305037957

number of connections: (3, 2)

connected features:
sw: [2. 3.]
pl: [5.1 6.9]
pw: [1.3 2.5]

first connectivity matrix:
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 1 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]]

second connectivity matrix:
[[0 1 0]
 [0 0 0]
 [0 0 0]
 [0 0 1]
 [0 0 0]
 [0 0 0]]

first layer weights:
tensor(indices=tensor([[ 0,  0,  3],
                       [ 4, 11,  9]]),
       values=tensor([ 4.5372,  3.9265, -4.8269]),
       size=(6, 12), nnz=3, layout=torch.sparse_coo)
first layer biases:
Parameter containing:
tensor([-2.0213,  0.2323, -0.2740,  2.3594,  0.0872, -0.0247],
       requires_grad=True)
second layer weights:
tensor(indices=tensor([[1, 2],
                       [0, 3]]),
       values=tensor([ 4.0896, -4.8804]),
       size=(3, 6), nnz=2, layout=torch.sparse_coo)
second layer biases:
Parameter containing:
tensor([ 0.2518, -2.5176,  3.4976], requires_grad=True)

Runtime: 811.67 seconds