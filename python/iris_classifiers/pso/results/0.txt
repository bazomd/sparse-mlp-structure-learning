experiment_num: 0

Parameters:
random_state=0
population=30
search_space_dimensions=(12, 6, 3)
learning_rate=0.01
alpha=0.7
epochs=450
patience=10
early_stopping_threshold=0.0001
num_init_connections=(7, 3)
connections_limits=((2, 10000), (2, 100000))


Configurations:
iterations: 30, w=0.9, c_1=2, c_2=2, epsilon=0.4
iterations: 30, w=0.9, c_1=4, c_2=4, epsilon=0.4
iterations: 20, w=0.9, c_1=1, c_2=10, epsilon=0.4


best particle:
train accuracy: 0.9083333333333333
test accuracy: 0.9333333333333333
test recall: 0.8888888888888888
test precision: 0.9555555555555556
test f1 score: 0.9095238095238095

number of connections: (4, 2)

connected features:
sw: [3.  4.4]
pl: [1.  1.6]
pl: [4.35 5.1 ]
pl: [5.1 6.9]

first connectivity matrix:
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 0 1 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]

second connectivity matrix:
[[0 0 0]
 [0 0 1]
 [1 0 0]
 [0 0 0]
 [0 0 0]
 [0 0 0]]

first layer weights:
tensor(indices=tensor([[1, 2, 2, 2],
                       [9, 5, 6, 8]]),
       values=tensor([ 4.4148,  3.1095,  3.5751, -3.6299]),
       size=(6, 12), nnz=4, layout=torch.sparse_coo)
first layer biases:
Parameter containing:
tensor([-0.2672, -2.1885, -2.7004,  0.1730, -0.1413,  0.0742],
       requires_grad=True)
second layer weights:
tensor(indices=tensor([[0, 2],
                       [2, 1]]),
       values=tensor([4.5053, 4.8371]),
       size=(3, 6), nnz=2, layout=torch.sparse_coo)
second layer biases:
Parameter containing:
tensor([-0.6216,  1.5404, -0.1130], requires_grad=True)

Runtime: 841.09 seconds