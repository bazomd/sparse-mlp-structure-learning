experiment_num: 7

Parameters:
random_state=7
population=30
search_space_dimensions=(12, 6, 3)
learning_rate=0.01
alpha=0.7
epochs=450
patience=10
early_stopping_threshold=0.0001
num_init_connections=(7, 3)
connections_limits=((2, 10000), (2, 100000))


Configurations:
iterations: 30, w=0.9, c_1=2, c_2=2, epsilon=0.4
iterations: 30, w=0.9, c_1=4, c_2=4, epsilon=0.4
iterations: 20, w=0.9, c_1=1, c_2=10, epsilon=0.4


best particle:
train accuracy: 0.9333333333333333
test accuracy: 0.9333333333333333
test recall: 0.9393939393939394
test precision: 0.9523809523809524
test f1 score: 0.9410256410256409

number of connections: (8, 3)

connected features:
sl: [4.3 5.1]
sl: [5.8 6.4]
sw: [3.  4.4]
pl: [1.6  4.35]
pl: [5.1 6.9]
pw: [0.1 1.3]

first connectivity matrix:
[[0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [1 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 0]
 [0 0 0 0 0 0]
 [0 0 0 0 1 1]
 [1 0 1 0 0 0]
 [0 0 0 0 0 0]]

second connectivity matrix:
[[1 0 0]
 [0 0 0]
 [0 0 0]
 [0 0 0]
 [0 1 0]
 [1 0 0]]

first layer weights:
tensor(indices=tensor([[ 0,  0,  1,  2,  4,  4,  4,  5],
                       [ 5, 10,  2, 10,  0,  7,  9,  9]]),
       values=tensor([ 3.2526,  3.7397,  0.2211, -0.2058,  3.0145, -3.5564,
                       4.3071,  3.9456]),
       size=(6, 12), nnz=8, layout=torch.sparse_coo)
first layer biases:
Parameter containing:
tensor([-4.6381e+00,  2.5598e-03, -9.2123e-02, -1.4211e-01, -1.0670e+00,
        -1.8339e+00], requires_grad=True)
second layer weights:
tensor(indices=tensor([[0, 0, 1],
                       [0, 5, 4]]),
       values=tensor([ 4.4884, -3.7433, -4.4804]),
       size=(3, 6), nnz=3, layout=torch.sparse_coo)
second layer biases:
Parameter containing:
tensor([-0.6593,  2.0704, -0.0837], requires_grad=True)

Runtime: 858.04 seconds