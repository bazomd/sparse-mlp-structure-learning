experiment_num: 1

Parameters:
random_state=1
population=30
search_space_dimensions=(12, 6, 3)
learning_rate=0.01
alpha=0.7
epochs=450
patience=10
early_stopping_threshold=0.0001
num_init_connections=(7, 3)
connections_limits=((2, 10000), (2, 100000))


Configurations:
iterations: 30, w=0.9, c_1=2, c_2=2, epsilon=0.4
iterations: 30, w=0.9, c_1=4, c_2=4, epsilon=0.4
iterations: 20, w=0.9, c_1=1, c_2=10, epsilon=0.4


best particle:
train accuracy: 0.9
test accuracy: 0.9666666666666667
test recall: 0.9444444444444445
test precision: 0.9761904761904763
test f1 score: 0.957351290684624

number of connections: (3, 2)

connected features:
sw: [2. 3.]
pl: [5.1 6.9]
pw: [0.1 1.3]

first connectivity matrix:
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 1 0 0 0 0]
 [0 0 0 0 0 1]
 [0 0 0 0 0 0]]

second connectivity matrix:
[[0 0 0]
 [0 0 1]
 [0 0 0]
 [0 0 0]
 [0 0 0]
 [1 0 0]]

first layer weights:
tensor(indices=tensor([[ 1,  5,  5],
                       [ 9,  4, 10]]),
       values=tensor([ 4.4681,  3.9550, -4.4270]),
       size=(6, 12), nnz=3, layout=torch.sparse_coo)
first layer biases:
Parameter containing:
tensor([ 0.1615, -2.2974, -0.2857,  0.1301, -0.2574,  1.7984],
       requires_grad=True)
second layer weights:
tensor(indices=tensor([[0, 2],
                       [5, 1]]),
       values=tensor([-4.4514,  4.3765]),
       size=(3, 6), nnz=2, layout=torch.sparse_coo)
second layer biases:
Parameter containing:
tensor([ 1.7651, -0.5656, -2.0976], requires_grad=True)

Runtime: 819.20 seconds